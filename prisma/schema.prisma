datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Org {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  createdAt DateTime?   @default(now())
  users     User[]
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String    @unique
  displayName String
  role        Role?     @default(USER)
  posts       Post[]
  profile     Profile?
  org         Org       @relation(fields: [orgId], references: [id])
  orgId       Int
  createdAt   DateTime? @default(now())
}

model Profile {
  id             Int     @id @default(autoincrement())
  bio            String
  avatar         String
  user           User    @relation(fields: [userId], references: [id])
  userId         Int
}

model Lens {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String
  org         Org     @relation(fields: [orgId], references: [id])
  orgId       Int
  posts       Post[]
}

model Post {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime?   @default(now())
  title      String
  summary    String
  published  Boolean?    @default(false)
  author     User        @relation(fields: [authorId], references: [id])
  authorId   Int
  lens       Lens        @relation(fields: [lensId], references: [id])
  lensId     Int
  replies    Reply[]
  content    String
  stars      Star[]
  tag        Tag         @relation(fields: [tagId], references: [id])
  tagId      Int
}

model Reply {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime?   @default(now())
  post       Post        @relation(fields: [postId], references: [id])
  postId     Int
  author     User        @relation(fields: [authorId], references: [id])
  authorId   Int
  content    String
  parentId   Int?
  stars      Star[]
}

model Star {
  id        Int         @id @default(autoincrement())
  post      Post        @relation(fields: [postId], references: [id])
  postId    Int
  reply     Reply?      @relation(fields: [replyId], references: [id])
  replyId   Int?
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  shining   Boolean?    // Dummy field because models can't have no non-referenceable fields.
}

model Tag {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  channelId     String      @unique
  posts         Post[]
}

enum Role {
  USER
  ADMIN
}