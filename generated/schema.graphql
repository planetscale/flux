### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Channel {
  id: ID
  name: String
}

scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Lens {
  description: String!
  id: Int!
  name: String!
  org: Org!
  posts(after: UniqueIdInput, before: UniqueIdInput, first: Int, last: Int): [Post]
}

input LensCreateInput {
  description: String!
  name: String!
  org: OrgCreateOneWithoutLensInput!
  posts: PostCreateManyWithoutLensInput
}

input LensCreateManyWithoutOrgInput {
  connect: [LensWhereUniqueInput!]
  connectOrCreate: [LensCreateOrConnectWithoutorgInput!]
  create: [LensCreateWithoutOrgInput!]
}

input LensCreateOneWithoutPostsInput {
  connect: LensWhereUniqueInput
  connectOrCreate: LensCreateOrConnectWithoutpostsInput
  create: LensCreateWithoutPostsInput
}

input LensCreateOrConnectWithoutorgInput {
  create: LensCreateWithoutOrgInput!
  where: LensWhereUniqueInput!
}

input LensCreateOrConnectWithoutpostsInput {
  create: LensCreateWithoutPostsInput!
  where: LensWhereUniqueInput!
}

input LensCreateWithoutOrgInput {
  description: String!
  name: String!
  posts: PostCreateManyWithoutLensInput
}

input LensCreateWithoutPostsInput {
  description: String!
  name: String!
  org: OrgCreateOneWithoutLensInput!
}

input LensScalarWhereInput {
  AND: [LensScalarWhereInput!]
  description: StringFilter
  id: IntFilter
  name: StringFilter
  NOT: [LensScalarWhereInput!]
  OR: [LensScalarWhereInput!]
  orgId: IntFilter
}

input LensUpdateInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutLensInput
  posts: PostUpdateManyWithoutLensInput
}

input LensUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input LensUpdateManyWithoutOrgInput {
  connect: [LensWhereUniqueInput!]
  connectOrCreate: [LensCreateOrConnectWithoutorgInput!]
  create: [LensCreateWithoutOrgInput!]
  delete: [LensWhereUniqueInput!]
  deleteMany: [LensScalarWhereInput!]
  disconnect: [LensWhereUniqueInput!]
  set: [LensWhereUniqueInput!]
  update: [LensUpdateWithWhereUniqueWithoutOrgInput!]
  updateMany: [LensUpdateManyWithWhereWithoutOrgInput!]
  upsert: [LensUpsertWithWhereUniqueWithoutOrgInput!]
}

input LensUpdateManyWithWhereWithoutOrgInput {
  data: LensUpdateManyMutationInput!
  where: LensScalarWhereInput!
}

input LensUpdateOneRequiredWithoutPostsInput {
  connect: LensWhereUniqueInput
  connectOrCreate: LensCreateOrConnectWithoutpostsInput
  create: LensCreateWithoutPostsInput
  update: LensUpdateWithoutPostsInput
  upsert: LensUpsertWithoutPostsInput
}

input LensUpdateWithoutOrgInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutLensInput
}

input LensUpdateWithoutPostsInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutLensInput
}

input LensUpdateWithWhereUniqueWithoutOrgInput {
  data: LensUpdateWithoutOrgInput!
  where: LensWhereUniqueInput!
}

input LensUpsertWithoutPostsInput {
  create: LensCreateWithoutPostsInput!
  update: LensUpdateWithoutPostsInput!
}

input LensUpsertWithWhereUniqueWithoutOrgInput {
  create: LensCreateWithoutOrgInput!
  update: LensUpdateWithoutOrgInput!
  where: LensWhereUniqueInput!
}

input LensWhereUniqueInput {
  id: Int
  name: String
}

type Mutation {
  createOneLens(data: LensCreateInput!): Lens!
  createOneOrg(data: OrgCreateInput!): Org!
  createOneReply(data: ReplyCreateInput!): Reply!
  createOneStar(data: StarCreateInput!): Star!
  createOneTag(data: TagCreateInput!): Tag!
  createOneUser(data: UserCreateInput!): User!
  deleteOneLens(where: LensWhereUniqueInput!): Lens
  deleteOneOrg(where: OrgWhereUniqueInput!): Org
  deleteOnePost(where: PostWhereUniqueInput!): Post
  deleteOneReply(where: ReplyWhereUniqueInput!): Reply
  deleteOneStar(where: StarWhereUniqueInput!): Star
  deleteOneTag(where: TagWhereUniqueInput!): Tag
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateOneLens(data: LensUpdateInput!, where: LensWhereUniqueInput!): Lens
  updateOneOrg(data: OrgUpdateInput!, where: OrgWhereUniqueInput!): Org
  updateOnePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateOneReply(data: ReplyUpdateInput!, where: ReplyWhereUniqueInput!): Reply
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumRoleFieldUpdateOperationsInput {
  set: Role
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

type Org {
  createdAt: DateTime
  id: Int!
  lenses: [Lens]
  name: String!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input OrgCreateInput {
  createdAt: DateTime
  Lens: LensCreateManyWithoutOrgInput
  name: String!
  users: UserCreateManyWithoutOrgInput
}

input OrgCreateOneWithoutLensInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutLensInput
  create: OrgCreateWithoutLensInput
}

input OrgCreateOneWithoutUsersInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutusersInput
  create: OrgCreateWithoutUsersInput
}

input OrgCreateOrConnectWithoutLensInput {
  create: OrgCreateWithoutLensInput!
  where: OrgWhereUniqueInput!
}

input OrgCreateOrConnectWithoutusersInput {
  create: OrgCreateWithoutUsersInput!
  where: OrgWhereUniqueInput!
}

input OrgCreateWithoutLensInput {
  createdAt: DateTime
  name: String!
  users: UserCreateManyWithoutOrgInput
}

input OrgCreateWithoutUsersInput {
  createdAt: DateTime
  Lens: LensCreateManyWithoutOrgInput
  name: String!
}

input OrgUpdateInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  Lens: LensUpdateManyWithoutOrgInput
  name: StringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrgInput
}

input OrgUpdateOneRequiredWithoutLensInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutLensInput
  create: OrgCreateWithoutLensInput
  update: OrgUpdateWithoutLensInput
  upsert: OrgUpsertWithoutLensInput
}

input OrgUpdateOneRequiredWithoutUsersInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutusersInput
  create: OrgCreateWithoutUsersInput
  update: OrgUpdateWithoutUsersInput
  upsert: OrgUpsertWithoutUsersInput
}

input OrgUpdateWithoutLensInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrgInput
}

input OrgUpdateWithoutUsersInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  Lens: LensUpdateManyWithoutOrgInput
  name: StringFieldUpdateOperationsInput
}

input OrgUpsertWithoutLensInput {
  create: OrgCreateWithoutLensInput!
  update: OrgUpdateWithoutLensInput!
}

input OrgUpsertWithoutUsersInput {
  create: OrgCreateWithoutUsersInput!
  update: OrgUpdateWithoutUsersInput!
}

input OrgWhereUniqueInput {
  id: Int
  name: String
}

type Post {
  author: User!
  content: String!
  createdAt: DateTime
  id: Int!
  lens: Lens!
  published: Boolean
  replies(after: ReplyWhereUniqueInput, before: ReplyWhereUniqueInput, first: Int, last: Int): [Reply!]!
  stars(after: StarWhereUniqueInput, before: StarWhereUniqueInput, first: Int, last: Int): [Star!]!
  summary: String!
  title: String!
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateManyWithoutLensInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutlensInput!]
  create: [PostCreateWithoutLensInput!]
}

input PostCreateManyWithoutTagInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithouttagInput!]
  create: [PostCreateWithoutTagInput!]
}

input PostCreateOneWithoutRepliesInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutrepliesInput
  create: PostCreateWithoutRepliesInput
}

input PostCreateOneWithoutStarsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutstarsInput
  create: PostCreateWithoutStarsInput
}

input PostCreateOrConnectWithoutauthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutlensInput {
  create: PostCreateWithoutLensInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutrepliesInput {
  create: PostCreateWithoutRepliesInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutstarsInput {
  create: PostCreateWithoutStarsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithouttagInput {
  create: PostCreateWithoutTagInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutAuthorInput {
  content: String!
  createdAt: DateTime
  lens: LensCreateOneWithoutPostsInput!
  published: Boolean
  replies: ReplyCreateManyWithoutPostInput
  stars: StarCreateManyWithoutPostInput
  summary: String!
  tag: TagCreateOneWithoutPostsInput!
  title: String!
}

input PostCreateWithoutLensInput {
  author: UserCreateOneWithoutPostsInput!
  content: String!
  createdAt: DateTime
  published: Boolean
  replies: ReplyCreateManyWithoutPostInput
  stars: StarCreateManyWithoutPostInput
  summary: String!
  tag: TagCreateOneWithoutPostsInput!
  title: String!
}

input PostCreateWithoutRepliesInput {
  author: UserCreateOneWithoutPostsInput!
  content: String!
  createdAt: DateTime
  lens: LensCreateOneWithoutPostsInput!
  published: Boolean
  stars: StarCreateManyWithoutPostInput
  summary: String!
  tag: TagCreateOneWithoutPostsInput!
  title: String!
}

input PostCreateWithoutStarsInput {
  author: UserCreateOneWithoutPostsInput!
  content: String!
  createdAt: DateTime
  lens: LensCreateOneWithoutPostsInput!
  published: Boolean
  replies: ReplyCreateManyWithoutPostInput
  summary: String!
  tag: TagCreateOneWithoutPostsInput!
  title: String!
}

input PostCreateWithoutTagInput {
  author: UserCreateOneWithoutPostsInput!
  content: String!
  createdAt: DateTime
  lens: LensCreateOneWithoutPostsInput!
  published: Boolean
  replies: ReplyCreateManyWithoutPostInput
  stars: StarCreateManyWithoutPostInput
  summary: String!
  title: String!
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  authorId: IntFilter
  content: StringFilter
  createdAt: DateTimeNullableFilter
  id: IntFilter
  lensId: IntFilter
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  published: BoolNullableFilter
  summary: StringFilter
  tagId: IntFilter
  title: StringFilter
}

input PostUpdateInput {
  author: UserUpdateOneRequiredWithoutPostsInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  lens: LensUpdateOneRequiredWithoutPostsInput
  published: NullableBoolFieldUpdateOperationsInput
  replies: ReplyUpdateManyWithoutPostInput
  stars: StarUpdateManyWithoutPostInput
  summary: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  summary: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithoutLensInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutlensInput!]
  create: [PostCreateWithoutLensInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutLensInput!]
  updateMany: [PostUpdateManyWithWhereWithoutLensInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutLensInput!]
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutLensInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateOneRequiredWithoutRepliesInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutrepliesInput
  create: PostCreateWithoutRepliesInput
  update: PostUpdateWithoutRepliesInput
  upsert: PostUpsertWithoutRepliesInput
}

input PostUpdateOneRequiredWithoutStarsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutstarsInput
  create: PostCreateWithoutStarsInput
  update: PostUpdateWithoutStarsInput
  upsert: PostUpsertWithoutStarsInput
}

input PostUpdateWithoutAuthorInput {
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  lens: LensUpdateOneRequiredWithoutPostsInput
  published: NullableBoolFieldUpdateOperationsInput
  replies: ReplyUpdateManyWithoutPostInput
  stars: StarUpdateManyWithoutPostInput
  summary: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutLensInput {
  author: UserUpdateOneRequiredWithoutPostsInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  published: NullableBoolFieldUpdateOperationsInput
  replies: ReplyUpdateManyWithoutPostInput
  stars: StarUpdateManyWithoutPostInput
  summary: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutRepliesInput {
  author: UserUpdateOneRequiredWithoutPostsInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  lens: LensUpdateOneRequiredWithoutPostsInput
  published: NullableBoolFieldUpdateOperationsInput
  stars: StarUpdateManyWithoutPostInput
  summary: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutStarsInput {
  author: UserUpdateOneRequiredWithoutPostsInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  lens: LensUpdateOneRequiredWithoutPostsInput
  published: NullableBoolFieldUpdateOperationsInput
  replies: ReplyUpdateManyWithoutPostInput
  summary: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutLensInput {
  data: PostUpdateWithoutLensInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutRepliesInput {
  create: PostCreateWithoutRepliesInput!
  update: PostUpdateWithoutRepliesInput!
}

input PostUpsertWithoutStarsInput {
  create: PostCreateWithoutStarsInput!
  update: PostUpdateWithoutStarsInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutLensInput {
  create: PostCreateWithoutLensInput!
  update: PostUpdateWithoutLensInput!
  where: PostWhereUniqueInput!
}

input PostWhereUniqueInput {
  id: Int
}

type Profile {
  avatar: String!
  bio: String!
  id: Int!
  user: User!
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutuserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  avatar: String!
  bio: String!
}

input ProfileUpdateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateWithoutUserInput {
  avatar: StringFieldUpdateOperationsInput
  bio: StringFieldUpdateOperationsInput
}

input ProfileUpsertWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  update: ProfileUpdateWithoutUserInput!
}

input ProfileWhereUniqueInput {
  id: Int
}

type Query {
  channels: [Channel]
  lens(after: LensWhereUniqueInput, before: LensWhereUniqueInput, first: Int, last: Int): [Lens!]!
  lenses: [Lens]
  org(where: OrgWhereUniqueInput!): Org
  orgs: [Org]
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  replies(after: ReplyWhereUniqueInput, before: ReplyWhereUniqueInput, first: Int, last: Int): [Reply!]!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  user(where: UserWhereUniqueInput!): User
}

type Reply {
  author: User!
  content: String!
  createdAt: DateTime
  id: Int!
  parentId: Int
  post: Post!
}

input ReplyCreateInput {
  author: UserCreateOneWithoutReplyInput!
  content: String!
  createdAt: DateTime
  parentId: Int
  post: PostCreateOneWithoutRepliesInput!
}

input ReplyCreateManyWithoutAuthorInput {
  connect: [ReplyWhereUniqueInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutauthorInput!]
  create: [ReplyCreateWithoutAuthorInput!]
}

input ReplyCreateManyWithoutPostInput {
  connect: [ReplyWhereUniqueInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutpostInput!]
  create: [ReplyCreateWithoutPostInput!]
}

input ReplyCreateOrConnectWithoutauthorInput {
  create: ReplyCreateWithoutAuthorInput!
  where: ReplyWhereUniqueInput!
}

input ReplyCreateOrConnectWithoutpostInput {
  create: ReplyCreateWithoutPostInput!
  where: ReplyWhereUniqueInput!
}

input ReplyCreateWithoutAuthorInput {
  content: String!
  createdAt: DateTime
  parentId: Int
  post: PostCreateOneWithoutRepliesInput!
}

input ReplyCreateWithoutPostInput {
  author: UserCreateOneWithoutReplyInput!
  content: String!
  createdAt: DateTime
  parentId: Int
}

input ReplyScalarWhereInput {
  AND: [ReplyScalarWhereInput!]
  authorId: IntFilter
  content: StringFilter
  createdAt: DateTimeNullableFilter
  id: IntFilter
  NOT: [ReplyScalarWhereInput!]
  OR: [ReplyScalarWhereInput!]
  parentId: IntNullableFilter
  postId: IntFilter
}

input ReplyUpdateInput {
  author: UserUpdateOneRequiredWithoutReplyInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  parentId: NullableIntFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutRepliesInput
}

input ReplyUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  parentId: NullableIntFieldUpdateOperationsInput
}

input ReplyUpdateManyWithoutAuthorInput {
  connect: [ReplyWhereUniqueInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutauthorInput!]
  create: [ReplyCreateWithoutAuthorInput!]
  delete: [ReplyWhereUniqueInput!]
  deleteMany: [ReplyScalarWhereInput!]
  disconnect: [ReplyWhereUniqueInput!]
  set: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReplyUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReplyUpdateManyWithoutPostInput {
  connect: [ReplyWhereUniqueInput!]
  connectOrCreate: [ReplyCreateOrConnectWithoutpostInput!]
  create: [ReplyCreateWithoutPostInput!]
  delete: [ReplyWhereUniqueInput!]
  deleteMany: [ReplyScalarWhereInput!]
  disconnect: [ReplyWhereUniqueInput!]
  set: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [ReplyUpdateManyWithWhereWithoutPostInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutPostInput!]
}

input ReplyUpdateManyWithWhereWithoutAuthorInput {
  data: ReplyUpdateManyMutationInput!
  where: ReplyScalarWhereInput!
}

input ReplyUpdateManyWithWhereWithoutPostInput {
  data: ReplyUpdateManyMutationInput!
  where: ReplyScalarWhereInput!
}

input ReplyUpdateWithoutAuthorInput {
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  parentId: NullableIntFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutRepliesInput
}

input ReplyUpdateWithoutPostInput {
  author: UserUpdateOneRequiredWithoutReplyInput
  content: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  parentId: NullableIntFieldUpdateOperationsInput
}

input ReplyUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReplyUpdateWithoutAuthorInput!
  where: ReplyWhereUniqueInput!
}

input ReplyUpdateWithWhereUniqueWithoutPostInput {
  data: ReplyUpdateWithoutPostInput!
  where: ReplyWhereUniqueInput!
}

input ReplyUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReplyCreateWithoutAuthorInput!
  update: ReplyUpdateWithoutAuthorInput!
  where: ReplyWhereUniqueInput!
}

input ReplyUpsertWithWhereUniqueWithoutPostInput {
  create: ReplyCreateWithoutPostInput!
  update: ReplyUpdateWithoutPostInput!
  where: ReplyWhereUniqueInput!
}

input ReplyWhereUniqueInput {
  id: Int
}

enum Role {
  ADMIN
  USER
}

type Star {
  id: Int!
  post: Post!
  user: User!
}

input StarCreateInput {
  post: PostCreateOneWithoutStarsInput!
  shining: Boolean
  user: UserCreateOneWithoutStarInput!
}

input StarCreateManyWithoutPostInput {
  connect: [StarWhereUniqueInput!]
  connectOrCreate: [StarCreateOrConnectWithoutpostInput!]
  create: [StarCreateWithoutPostInput!]
}

input StarCreateManyWithoutUserInput {
  connect: [StarWhereUniqueInput!]
  connectOrCreate: [StarCreateOrConnectWithoutuserInput!]
  create: [StarCreateWithoutUserInput!]
}

input StarCreateOrConnectWithoutpostInput {
  create: StarCreateWithoutPostInput!
  where: StarWhereUniqueInput!
}

input StarCreateOrConnectWithoutuserInput {
  create: StarCreateWithoutUserInput!
  where: StarWhereUniqueInput!
}

input StarCreateWithoutPostInput {
  shining: Boolean
  user: UserCreateOneWithoutStarInput!
}

input StarCreateWithoutUserInput {
  post: PostCreateOneWithoutStarsInput!
  shining: Boolean
}

input StarScalarWhereInput {
  AND: [StarScalarWhereInput!]
  id: IntFilter
  NOT: [StarScalarWhereInput!]
  OR: [StarScalarWhereInput!]
  postId: IntFilter
  shining: BoolNullableFilter
  userId: IntFilter
}

input StarUpdateManyMutationInput {
  shining: NullableBoolFieldUpdateOperationsInput
}

input StarUpdateManyWithoutPostInput {
  connect: [StarWhereUniqueInput!]
  connectOrCreate: [StarCreateOrConnectWithoutpostInput!]
  create: [StarCreateWithoutPostInput!]
  delete: [StarWhereUniqueInput!]
  deleteMany: [StarScalarWhereInput!]
  disconnect: [StarWhereUniqueInput!]
  set: [StarWhereUniqueInput!]
  update: [StarUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [StarUpdateManyWithWhereWithoutPostInput!]
  upsert: [StarUpsertWithWhereUniqueWithoutPostInput!]
}

input StarUpdateManyWithoutUserInput {
  connect: [StarWhereUniqueInput!]
  connectOrCreate: [StarCreateOrConnectWithoutuserInput!]
  create: [StarCreateWithoutUserInput!]
  delete: [StarWhereUniqueInput!]
  deleteMany: [StarScalarWhereInput!]
  disconnect: [StarWhereUniqueInput!]
  set: [StarWhereUniqueInput!]
  update: [StarUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [StarUpdateManyWithWhereWithoutUserInput!]
  upsert: [StarUpsertWithWhereUniqueWithoutUserInput!]
}

input StarUpdateManyWithWhereWithoutPostInput {
  data: StarUpdateManyMutationInput!
  where: StarScalarWhereInput!
}

input StarUpdateManyWithWhereWithoutUserInput {
  data: StarUpdateManyMutationInput!
  where: StarScalarWhereInput!
}

input StarUpdateWithoutPostInput {
  shining: NullableBoolFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutStarInput
}

input StarUpdateWithoutUserInput {
  post: PostUpdateOneRequiredWithoutStarsInput
  shining: NullableBoolFieldUpdateOperationsInput
}

input StarUpdateWithWhereUniqueWithoutPostInput {
  data: StarUpdateWithoutPostInput!
  where: StarWhereUniqueInput!
}

input StarUpdateWithWhereUniqueWithoutUserInput {
  data: StarUpdateWithoutUserInput!
  where: StarWhereUniqueInput!
}

input StarUpsertWithWhereUniqueWithoutPostInput {
  create: StarCreateWithoutPostInput!
  update: StarUpdateWithoutPostInput!
  where: StarWhereUniqueInput!
}

input StarUpsertWithWhereUniqueWithoutUserInput {
  create: StarCreateWithoutUserInput!
  update: StarUpdateWithoutUserInput!
  where: StarWhereUniqueInput!
}

input StarWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  id: Int!
  name: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
}

input TagCreateInput {
  channelId: String!
  name: String!
  posts: PostCreateManyWithoutTagInput
}

input TagCreateOneWithoutPostsInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutpostsInput
  create: TagCreateWithoutPostsInput
}

input TagCreateOrConnectWithoutpostsInput {
  create: TagCreateWithoutPostsInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutPostsInput {
  channelId: String!
  name: String!
}

input TagUpdateOneRequiredWithoutPostsInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutpostsInput
  create: TagCreateWithoutPostsInput
  update: TagUpdateWithoutPostsInput
  upsert: TagUpsertWithoutPostsInput
}

input TagUpdateWithoutPostsInput {
  channelId: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithoutPostsInput {
  create: TagCreateWithoutPostsInput!
  update: TagUpdateWithoutPostsInput!
}

input TagWhereUniqueInput {
  channelId: String
  id: Int
  name: String
}

input UniqueIdInput {
  id: Int
}

type User {
  createdAt: DateTime
  displayName: String!
  email: String!
  id: Int!
  org: Org!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  profile: Profile
  role: Role
  username: String!
}

input UserCreateInput {
  createdAt: DateTime
  displayName: String!
  email: String!
  org: OrgCreateOneWithoutUsersInput!
  posts: PostCreateManyWithoutAuthorInput
  profile: ProfileCreateOneWithoutUserInput
  Reply: ReplyCreateManyWithoutAuthorInput
  role: Role
  Star: StarCreateManyWithoutUserInput
  username: String!
}

input UserCreateManyWithoutOrgInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutorgInput!]
  create: [UserCreateWithoutOrgInput!]
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateOneWithoutReplyInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReplyInput
  create: UserCreateWithoutReplyInput
}

input UserCreateOneWithoutStarInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStarInput
  create: UserCreateWithoutStarInput
}

input UserCreateOrConnectWithoutorgInput {
  create: UserCreateWithoutOrgInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutpostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutReplyInput {
  create: UserCreateWithoutReplyInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutStarInput {
  create: UserCreateWithoutStarInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutOrgInput {
  createdAt: DateTime
  displayName: String!
  email: String!
  posts: PostCreateManyWithoutAuthorInput
  profile: ProfileCreateOneWithoutUserInput
  Reply: ReplyCreateManyWithoutAuthorInput
  role: Role
  Star: StarCreateManyWithoutUserInput
  username: String!
}

input UserCreateWithoutPostsInput {
  createdAt: DateTime
  displayName: String!
  email: String!
  org: OrgCreateOneWithoutUsersInput!
  profile: ProfileCreateOneWithoutUserInput
  Reply: ReplyCreateManyWithoutAuthorInput
  role: Role
  Star: StarCreateManyWithoutUserInput
  username: String!
}

input UserCreateWithoutReplyInput {
  createdAt: DateTime
  displayName: String!
  email: String!
  org: OrgCreateOneWithoutUsersInput!
  posts: PostCreateManyWithoutAuthorInput
  profile: ProfileCreateOneWithoutUserInput
  role: Role
  Star: StarCreateManyWithoutUserInput
  username: String!
}

input UserCreateWithoutStarInput {
  createdAt: DateTime
  displayName: String!
  email: String!
  org: OrgCreateOneWithoutUsersInput!
  posts: PostCreateManyWithoutAuthorInput
  profile: ProfileCreateOneWithoutUserInput
  Reply: ReplyCreateManyWithoutAuthorInput
  role: Role
  username: String!
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  createdAt: DateTimeNullableFilter
  displayName: StringFilter
  email: StringFilter
  id: IntFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  orgId: IntFilter
  role: EnumRoleNullableFilter
  username: StringFilter
}

input UserUpdateInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersInput
  posts: PostUpdateManyWithoutAuthorInput
  profile: ProfileUpdateOneWithoutUserInput
  Reply: ReplyUpdateManyWithoutAuthorInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  Star: StarUpdateManyWithoutUserInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyWithoutOrgInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutorgInput!]
  create: [UserCreateWithoutOrgInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutOrgInput!]
  updateMany: [UserUpdateManyWithWhereWithoutOrgInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutOrgInput!]
}

input UserUpdateManyWithWhereWithoutOrgInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
  update: UserUpdateWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateOneRequiredWithoutReplyInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReplyInput
  create: UserCreateWithoutReplyInput
  update: UserUpdateWithoutReplyInput
  upsert: UserUpsertWithoutReplyInput
}

input UserUpdateOneRequiredWithoutStarInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStarInput
  create: UserCreateWithoutStarInput
  update: UserUpdateWithoutStarInput
  upsert: UserUpsertWithoutStarInput
}

input UserUpdateWithoutOrgInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  profile: ProfileUpdateOneWithoutUserInput
  Reply: ReplyUpdateManyWithoutAuthorInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  Star: StarUpdateManyWithoutUserInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutPostsInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersInput
  profile: ProfileUpdateOneWithoutUserInput
  Reply: ReplyUpdateManyWithoutAuthorInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  Star: StarUpdateManyWithoutUserInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutReplyInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersInput
  posts: PostUpdateManyWithoutAuthorInput
  profile: ProfileUpdateOneWithoutUserInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  Star: StarUpdateManyWithoutUserInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutStarInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  displayName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersInput
  posts: PostUpdateManyWithoutAuthorInput
  profile: ProfileUpdateOneWithoutUserInput
  Reply: ReplyUpdateManyWithoutAuthorInput
  role: NullableEnumRoleFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutOrgInput {
  data: UserUpdateWithoutOrgInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  update: UserUpdateWithoutPostsInput!
}

input UserUpsertWithoutReplyInput {
  create: UserCreateWithoutReplyInput!
  update: UserUpdateWithoutReplyInput!
}

input UserUpsertWithoutStarInput {
  create: UserCreateWithoutStarInput!
  update: UserUpdateWithoutStarInput!
}

input UserUpsertWithWhereUniqueWithoutOrgInput {
  create: UserCreateWithoutOrgInput!
  update: UserUpdateWithoutOrgInput!
  where: UserWhereUniqueInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
  username: String
}
